{"remainingRequest":"E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\黎超超\\an-express\\src\\views\\admin\\user\\PayPending.vue?vue&type=template&id=4b093a6e&","dependencies":[{"path":"E:\\黎超超\\an-express\\src\\views\\admin\\user\\PayPending.vue","mtime":1603936683987},{"path":"E:\\黎超超\\an-express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}