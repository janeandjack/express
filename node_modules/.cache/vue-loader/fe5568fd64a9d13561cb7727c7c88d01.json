{"remainingRequest":"E:\\黎超超\\express\\express\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\黎超超\\express\\express\\src\\components\\AvatarUpload.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"E:\\黎超超\\express\\express\\src\\components\\AvatarUpload.vue","mtime":1603936683956},{"path":"E:\\黎超超\\express\\express\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\express\\express\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\黎超超\\express\\express\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\黎超超\\express\\express\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\express\\express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\express\\express\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmVsLXVwbG9hZCB7DQogIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQp9DQouZWwtdXBsb2FkX19pbnB1dCB7DQogIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsNCn0NCi5hdmF0YXItdXBsb2FkZXIgew0KICBjdXJzb3I6IHBvaW50ZXI7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCn0NCi5hdmF0YXItdXBsb2FkZXI6aG92ZXIgew0KICBib3JkZXItY29sb3I6ICM0MDllZmY7DQp9DQouYXZhdGFyLXVwbG9hZGVyLWljb24gew0KICBmb250LXNpemU6IDgwcHg7DQogIG1hcmdpbi10b3A6IDMwcHg7DQogIG1hcmdpbi1ib3R0b206IDcwcHg7DQp9DQouYXZhdGFyIHsNCiAgd2lkdGg6IDE3OHB4Ow0KICBoZWlnaHQ6IDE3OHB4Ow0KICBkaXNwbGF5OiBibG9jazsNCiAgbWFyZ2luLWxlZnQ6IDQwcHg7DQp9DQo="},{"version":3,"sources":["AvatarUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AvatarUpload.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <el-dialog\r\n    title=\"请更新头像\"\r\n    :visible.sync=\"visible\"\r\n    width=\"300px\"\r\n    :before-close=\"closeDialog\"\r\n  >\r\n    <el-upload\r\n      class=\"avatar-uploader\"\r\n      action=\"https://upload-z2.qiniup.com\"\r\n      :data=\"token\"\r\n      :on-success=\"handleAvatarSuccess\"\r\n      :before-upload=\"beforeAvatarUpload\"\r\n    >\r\n      <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\" />\r\n      <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n      <div class=\"el-upload__tip\" slot=\"tip\">\r\n        *上传照片只支持PNG，GIF，JPEG 和 JPG格式，大小不超过1MB。\r\n      </div>\r\n    </el-upload>\r\n    <span slot=\"footer\">\r\n      <el-button @click=\"closeDialog\">取消</el-button>\r\n      <el-button type=\"primary\" @click.enter=\"uploadAvatar\">确定</el-button>\r\n    </span>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\nimport { ref, computed, inject } from \"@vue/composition-api\";\r\nimport { imageDomain } from \"@/MainAPI.js\";\r\nexport default {\r\n  setup(props, { root: { $store, $message } }) {\r\n    const imageUrl = ref(\"\");\r\n    const imageData = ref(\"\");\r\n\r\n    //inject reload() to refresh component\r\n    const toReload = inject(\"reload\");\r\n\r\n    const visible = computed(() => {\r\n      return $store.state.dialogVisible;\r\n    });\r\n\r\n    const token = computed(() => {\r\n      return $store.state.token;\r\n    });\r\n\r\n    //Before uploading avatar, verify the format and size.\r\n    const beforeAvatarUpload = (file) => {\r\n      $store.dispatch(\"getUpToken\")\r\n      let sign = true;\r\n      const imgAccept = [\"image/gif\", \"image/jpeg\", \"image/jpg\", \"image/png\"];\r\n      const isLt1M = file.size / 1024 / 1024 < 1;\r\n      if (imgAccept.indexOf(file.type) == -1) {\r\n        $message.error(\"文件格式应是图片！\");\r\n        sign = false;\r\n      } else if (!isLt1M) {\r\n        $message.error(\"图片大小超过1MB了！\");\r\n        sign = false;\r\n      }\r\n      return sign;\r\n    };\r\n    //getBase64 is used to convert an image to base64 encoded string\r\n    // const getBase64 = (file) => {\r\n    //   return new Promise(function(resolve, reject) {\r\n    //     let reader = new FileReader();\r\n    //     let imgResult = \"\";\r\n    //     reader.readAsDataURL(file);\r\n    //     reader.onload = function() {\r\n    //       imgResult = reader.result;\r\n    //     };\r\n    //     reader.onerror = function(error) {\r\n    //       reject(error);\r\n    //     };\r\n    //     reader.onloadend = function() {\r\n    //       resolve(imgResult);\r\n    //     };\r\n    //   });\r\n    // };\r\n    //get the image by the image URL, and convert it to encoded string\r\n    const handleAvatarSuccess = (file) => {\r\n      $store.dispatch(\"getUpToken\").then(() => {\r\n        imageData.value = file.key;\r\n        imageUrl.value = imageDomain + file.key;\r\n      });\r\n      // imageUrl.value = URL.createObjectURL(file.file);\r\n      // getBase64(file.file).then((res) => {\r\n      //   imageData.value = res;\r\n      // });\r\n    };\r\n    //When submit/update button is clicked, save the image into database\r\n    const uploadAvatar = () => {\r\n      let data = {\r\n        avatar: imageData.value,\r\n      };\r\n      $store\r\n        .dispatch(\"avatarUpload\", data)\r\n        .then(() => {\r\n          $message.success(\"头像上传成功！\");\r\n          $store.commit(\"openDialog\", false);\r\n          toReload();\r\n        })\r\n        .catch(() => {});\r\n    };\r\n    //Close the dialog\r\n    const closeDialog = () => {\r\n      $store.commit(\"openDialog\", false);\r\n    };\r\n    return {\r\n      imageUrl,\r\n      beforeAvatarUpload,\r\n      handleAvatarSuccess,\r\n      uploadAvatar,\r\n      closeDialog,\r\n\r\n      visible,\r\n\r\n      token,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.el-upload {\r\n  width: 100% !important;\r\n}\r\n.el-upload__input {\r\n  display: none !important;\r\n}\r\n.avatar-uploader {\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader:hover {\r\n  border-color: #409eff;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 80px;\r\n  margin-top: 30px;\r\n  margin-bottom: 70px;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n  margin-left: 40px;\r\n}\r\n</style>\r\n"]}]}