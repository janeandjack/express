{"remainingRequest":"E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\黎超超\\an-express\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\黎超超\\an-express\\src\\views\\admin\\administration\\OrderSignedList.vue?vue&type=template&id=97763b5e&scoped=true&","dependencies":[{"path":"E:\\黎超超\\an-express\\src\\views\\admin\\administration\\OrderSignedList.vue","mtime":1603936683975},{"path":"E:\\黎超超\\an-express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}