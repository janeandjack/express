{"remainingRequest":"E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\黎超超\\an-express\\src\\views\\admin\\administration\\ExpressPendingList.vue?vue&type=template&id=5d13bfcc&scoped=true&","dependencies":[{"path":"E:\\黎超超\\an-express\\src\\views\\admin\\administration\\ExpressPendingList.vue","mtime":1603936683972},{"path":"E:\\黎超超\\an-express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}