{"remainingRequest":"E:\\黎超超\\an-express\\node_modules\\thread-loader\\dist\\cjs.js!E:\\黎超超\\an-express\\node_modules\\babel-loader\\lib\\index.js!E:\\黎超超\\an-express\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\黎超超\\an-express\\src\\components\\AvatarUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\黎超超\\an-express\\src\\components\\AvatarUpload.vue","mtime":1603936683956},{"path":"E:\\黎超超\\an-express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\黎超超\\an-express\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyByZWYsIGNvbXB1dGVkLCBpbmplY3QgfSBmcm9tICJAdnVlL2NvbXBvc2l0aW9uLWFwaSI7CmltcG9ydCB7IGltYWdlRG9tYWluIH0gZnJvbSAiQC9NYWluQVBJLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcywgX3JlZikgewogICAgdmFyIF9yZWYkcm9vdCA9IF9yZWYucm9vdCwKICAgICAgICAkc3RvcmUgPSBfcmVmJHJvb3QuJHN0b3JlLAogICAgICAgICRtZXNzYWdlID0gX3JlZiRyb290LiRtZXNzYWdlOwogICAgdmFyIGltYWdlVXJsID0gcmVmKCIiKTsKICAgIHZhciBpbWFnZURhdGEgPSByZWYoIiIpOyAvL2luamVjdCByZWxvYWQoKSB0byByZWZyZXNoIGNvbXBvbmVudAoKICAgIHZhciB0b1JlbG9hZCA9IGluamVjdCgicmVsb2FkIik7CiAgICB2YXIgdmlzaWJsZSA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRzdG9yZS5zdGF0ZS5kaWFsb2dWaXNpYmxlOwogICAgfSk7CiAgICB2YXIgdG9rZW4gPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkc3RvcmUuc3RhdGUudG9rZW47CiAgICB9KTsgLy9CZWZvcmUgdXBsb2FkaW5nIGF2YXRhciwgdmVyaWZ5IHRoZSBmb3JtYXQgYW5kIHNpemUuCgogICAgdmFyIGJlZm9yZUF2YXRhclVwbG9hZCA9IGZ1bmN0aW9uIGJlZm9yZUF2YXRhclVwbG9hZChmaWxlKSB7CiAgICAgICRzdG9yZS5kaXNwYXRjaCgiZ2V0VXBUb2tlbiIpOwogICAgICB2YXIgc2lnbiA9IHRydWU7CiAgICAgIHZhciBpbWdBY2NlcHQgPSBbImltYWdlL2dpZiIsICJpbWFnZS9qcGVnIiwgImltYWdlL2pwZyIsICJpbWFnZS9wbmciXTsKICAgICAgdmFyIGlzTHQxTSA9IGZpbGUuc2l6ZSAvIDEwMjQgLyAxMDI0IDwgMTsKCiAgICAgIGlmIChpbWdBY2NlcHQuaW5kZXhPZihmaWxlLnR5cGUpID09IC0xKSB7CiAgICAgICAgJG1lc3NhZ2UuZXJyb3IoIuaWh+S7tuagvOW8j+W6lOaYr+WbvueJh++8gSIpOwogICAgICAgIHNpZ24gPSBmYWxzZTsKICAgICAgfSBlbHNlIGlmICghaXNMdDFNKSB7CiAgICAgICAgJG1lc3NhZ2UuZXJyb3IoIuWbvueJh+Wkp+Wwj+i2hei/hzFNQuS6hu+8gSIpOwogICAgICAgIHNpZ24gPSBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHNpZ247CiAgICB9OyAvL2dldEJhc2U2NCBpcyB1c2VkIHRvIGNvbnZlcnQgYW4gaW1hZ2UgdG8gYmFzZTY0IGVuY29kZWQgc3RyaW5nCiAgICAvLyBjb25zdCBnZXRCYXNlNjQgPSAoZmlsZSkgPT4gewogICAgLy8gICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAvLyAgICAgbGV0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAvLyAgICAgbGV0IGltZ1Jlc3VsdCA9ICIiOwogICAgLy8gICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwogICAgLy8gICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbigpIHsKICAgIC8vICAgICAgIGltZ1Jlc3VsdCA9IHJlYWRlci5yZXN1bHQ7CiAgICAvLyAgICAgfTsKICAgIC8vICAgICByZWFkZXIub25lcnJvciA9IGZ1bmN0aW9uKGVycm9yKSB7CiAgICAvLyAgICAgICByZWplY3QoZXJyb3IpOwogICAgLy8gICAgIH07CiAgICAvLyAgICAgcmVhZGVyLm9ubG9hZGVuZCA9IGZ1bmN0aW9uKCkgewogICAgLy8gICAgICAgcmVzb2x2ZShpbWdSZXN1bHQpOwogICAgLy8gICAgIH07CiAgICAvLyAgIH0pOwogICAgLy8gfTsKICAgIC8vZ2V0IHRoZSBpbWFnZSBieSB0aGUgaW1hZ2UgVVJMLCBhbmQgY29udmVydCBpdCB0byBlbmNvZGVkIHN0cmluZwoKCiAgICB2YXIgaGFuZGxlQXZhdGFyU3VjY2VzcyA9IGZ1bmN0aW9uIGhhbmRsZUF2YXRhclN1Y2Nlc3MoZmlsZSkgewogICAgICAkc3RvcmUuZGlzcGF0Y2goImdldFVwVG9rZW4iKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBpbWFnZURhdGEudmFsdWUgPSBmaWxlLmtleTsKICAgICAgICBpbWFnZVVybC52YWx1ZSA9IGltYWdlRG9tYWluICsgZmlsZS5rZXk7CiAgICAgIH0pOyAvLyBpbWFnZVVybC52YWx1ZSA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZS5maWxlKTsKICAgICAgLy8gZ2V0QmFzZTY0KGZpbGUuZmlsZSkudGhlbigocmVzKSA9PiB7CiAgICAgIC8vICAgaW1hZ2VEYXRhLnZhbHVlID0gcmVzOwogICAgICAvLyB9KTsKICAgIH07IC8vV2hlbiBzdWJtaXQvdXBkYXRlIGJ1dHRvbiBpcyBjbGlja2VkLCBzYXZlIHRoZSBpbWFnZSBpbnRvIGRhdGFiYXNlCgoKICAgIHZhciB1cGxvYWRBdmF0YXIgPSBmdW5jdGlvbiB1cGxvYWRBdmF0YXIoKSB7CiAgICAgIHZhciBkYXRhID0gewogICAgICAgIGF2YXRhcjogaW1hZ2VEYXRhLnZhbHVlCiAgICAgIH07CiAgICAgICRzdG9yZS5kaXNwYXRjaCgiYXZhdGFyVXBsb2FkIiwgZGF0YSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgJG1lc3NhZ2Uuc3VjY2Vzcygi5aS05YOP5LiK5Lyg5oiQ5Yqf77yBIik7CiAgICAgICAgJHN0b3JlLmNvbW1pdCgib3BlbkRpYWxvZyIsIGZhbHNlKTsKICAgICAgICB0b1JlbG9hZCgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7fSk7CiAgICB9OyAvL0Nsb3NlIHRoZSBkaWFsb2cKCgogICAgdmFyIGNsb3NlRGlhbG9nID0gZnVuY3Rpb24gY2xvc2VEaWFsb2coKSB7CiAgICAgICRzdG9yZS5jb21taXQoIm9wZW5EaWFsb2ciLCBmYWxzZSk7CiAgICB9OwoKICAgIHJldHVybiB7CiAgICAgIGltYWdlVXJsOiBpbWFnZVVybCwKICAgICAgYmVmb3JlQXZhdGFyVXBsb2FkOiBiZWZvcmVBdmF0YXJVcGxvYWQsCiAgICAgIGhhbmRsZUF2YXRhclN1Y2Nlc3M6IGhhbmRsZUF2YXRhclN1Y2Nlc3MsCiAgICAgIHVwbG9hZEF2YXRhcjogdXBsb2FkQXZhdGFyLAogICAgICBjbG9zZURpYWxvZzogY2xvc2VEaWFsb2csCiAgICAgIHZpc2libGU6IHZpc2libGUsCiAgICAgIHRva2VuOiB0b2tlbgogICAgfTsKICB9Cn07"},{"version":3,"sources":["AvatarUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAA,GAAA,EAAA,QAAA,EAAA,MAAA,QAAA,sBAAA;AACA,SAAA,WAAA,QAAA,cAAA;AACA,eAAA;AACA,EAAA,KADA,iBACA,KADA,QACA;AAAA,yBAAA,IAAA;AAAA,QAAA,MAAA,aAAA,MAAA;AAAA,QAAA,QAAA,aAAA,QAAA;AACA,QAAA,QAAA,GAAA,GAAA,CAAA,EAAA,CAAA;AACA,QAAA,SAAA,GAAA,GAAA,CAAA,EAAA,CAAA,CAFA,CAIA;;AACA,QAAA,QAAA,GAAA,MAAA,CAAA,QAAA,CAAA;AAEA,QAAA,OAAA,GAAA,QAAA,CAAA,YAAA;AACA,aAAA,MAAA,CAAA,KAAA,CAAA,aAAA;AACA,KAFA,CAAA;AAIA,QAAA,KAAA,GAAA,QAAA,CAAA,YAAA;AACA,aAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA,KAFA,CAAA,CAXA,CAeA;;AACA,QAAA,kBAAA,GAAA,SAAA,kBAAA,CAAA,IAAA,EAAA;AACA,MAAA,MAAA,CAAA,QAAA,CAAA,YAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,SAAA,GAAA,CAAA,WAAA,EAAA,YAAA,EAAA,WAAA,EAAA,WAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,CAAA;;AACA,UAAA,SAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,KAAA,CAAA,CAAA,EAAA;AACA,QAAA,QAAA,CAAA,KAAA,CAAA,WAAA;AACA,QAAA,IAAA,GAAA,KAAA;AACA,OAHA,MAGA,IAAA,CAAA,MAAA,EAAA;AACA,QAAA,QAAA,CAAA,KAAA,CAAA,aAAA;AACA,QAAA,IAAA,GAAA,KAAA;AACA;;AACA,aAAA,IAAA;AACA,KAbA,CAhBA,CA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAA,mBAAA,GAAA,SAAA,mBAAA,CAAA,IAAA,EAAA;AACA,MAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,IAAA,CAAA,YAAA;AACA,QAAA,SAAA,CAAA,KAAA,GAAA,IAAA,CAAA,GAAA;AACA,QAAA,QAAA,CAAA,KAAA,GAAA,WAAA,GAAA,IAAA,CAAA,GAAA;AACA,OAHA,EADA,CAKA;AACA;AACA;AACA;AACA,KATA,CAhDA,CA0DA;;;AACA,QAAA,YAAA,GAAA,SAAA,YAAA,GAAA;AACA,UAAA,IAAA,GAAA;AACA,QAAA,MAAA,EAAA,SAAA,CAAA;AADA,OAAA;AAGA,MAAA,MAAA,CACA,QADA,CACA,cADA,EACA,IADA,EAEA,IAFA,CAEA,YAAA;AACA,QAAA,QAAA,CAAA,OAAA,CAAA,SAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,YAAA,EAAA,KAAA;AACA,QAAA,QAAA;AACA,OANA,EAOA,KAPA,CAOA,YAAA,CAAA,CAPA;AAQA,KAZA,CA3DA,CAwEA;;;AACA,QAAA,WAAA,GAAA,SAAA,WAAA,GAAA;AACA,MAAA,MAAA,CAAA,MAAA,CAAA,YAAA,EAAA,KAAA;AACA,KAFA;;AAGA,WAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,kBAAA,EAAA,kBAFA;AAGA,MAAA,mBAAA,EAAA,mBAHA;AAIA,MAAA,YAAA,EAAA,YAJA;AAKA,MAAA,WAAA,EAAA,WALA;AAOA,MAAA,OAAA,EAAA,OAPA;AASA,MAAA,KAAA,EAAA;AATA,KAAA;AAWA;AAxFA,CAAA","sourcesContent":["<template>\r\n  <el-dialog\r\n    title=\"请更新头像\"\r\n    :visible.sync=\"visible\"\r\n    width=\"300px\"\r\n    :before-close=\"closeDialog\"\r\n  >\r\n    <el-upload\r\n      class=\"avatar-uploader\"\r\n      action=\"https://upload-z2.qiniup.com\"\r\n      :data=\"token\"\r\n      :on-success=\"handleAvatarSuccess\"\r\n      :before-upload=\"beforeAvatarUpload\"\r\n    >\r\n      <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\" />\r\n      <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n      <div class=\"el-upload__tip\" slot=\"tip\">\r\n        *上传照片只支持PNG，GIF，JPEG 和 JPG格式，大小不超过1MB。\r\n      </div>\r\n    </el-upload>\r\n    <span slot=\"footer\">\r\n      <el-button @click=\"closeDialog\">取消</el-button>\r\n      <el-button type=\"primary\" @click.enter=\"uploadAvatar\">确定</el-button>\r\n    </span>\r\n  </el-dialog>\r\n</template>\r\n<script>\r\nimport { ref, computed, inject } from \"@vue/composition-api\";\r\nimport { imageDomain } from \"@/MainAPI.js\";\r\nexport default {\r\n  setup(props, { root: { $store, $message } }) {\r\n    const imageUrl = ref(\"\");\r\n    const imageData = ref(\"\");\r\n\r\n    //inject reload() to refresh component\r\n    const toReload = inject(\"reload\");\r\n\r\n    const visible = computed(() => {\r\n      return $store.state.dialogVisible;\r\n    });\r\n\r\n    const token = computed(() => {\r\n      return $store.state.token;\r\n    });\r\n\r\n    //Before uploading avatar, verify the format and size.\r\n    const beforeAvatarUpload = (file) => {\r\n      $store.dispatch(\"getUpToken\")\r\n      let sign = true;\r\n      const imgAccept = [\"image/gif\", \"image/jpeg\", \"image/jpg\", \"image/png\"];\r\n      const isLt1M = file.size / 1024 / 1024 < 1;\r\n      if (imgAccept.indexOf(file.type) == -1) {\r\n        $message.error(\"文件格式应是图片！\");\r\n        sign = false;\r\n      } else if (!isLt1M) {\r\n        $message.error(\"图片大小超过1MB了！\");\r\n        sign = false;\r\n      }\r\n      return sign;\r\n    };\r\n    //getBase64 is used to convert an image to base64 encoded string\r\n    // const getBase64 = (file) => {\r\n    //   return new Promise(function(resolve, reject) {\r\n    //     let reader = new FileReader();\r\n    //     let imgResult = \"\";\r\n    //     reader.readAsDataURL(file);\r\n    //     reader.onload = function() {\r\n    //       imgResult = reader.result;\r\n    //     };\r\n    //     reader.onerror = function(error) {\r\n    //       reject(error);\r\n    //     };\r\n    //     reader.onloadend = function() {\r\n    //       resolve(imgResult);\r\n    //     };\r\n    //   });\r\n    // };\r\n    //get the image by the image URL, and convert it to encoded string\r\n    const handleAvatarSuccess = (file) => {\r\n      $store.dispatch(\"getUpToken\").then(() => {\r\n        imageData.value = file.key;\r\n        imageUrl.value = imageDomain + file.key;\r\n      });\r\n      // imageUrl.value = URL.createObjectURL(file.file);\r\n      // getBase64(file.file).then((res) => {\r\n      //   imageData.value = res;\r\n      // });\r\n    };\r\n    //When submit/update button is clicked, save the image into database\r\n    const uploadAvatar = () => {\r\n      let data = {\r\n        avatar: imageData.value,\r\n      };\r\n      $store\r\n        .dispatch(\"avatarUpload\", data)\r\n        .then(() => {\r\n          $message.success(\"头像上传成功！\");\r\n          $store.commit(\"openDialog\", false);\r\n          toReload();\r\n        })\r\n        .catch(() => {});\r\n    };\r\n    //Close the dialog\r\n    const closeDialog = () => {\r\n      $store.commit(\"openDialog\", false);\r\n    };\r\n    return {\r\n      imageUrl,\r\n      beforeAvatarUpload,\r\n      handleAvatarSuccess,\r\n      uploadAvatar,\r\n      closeDialog,\r\n\r\n      visible,\r\n\r\n      token,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.el-upload {\r\n  width: 100% !important;\r\n}\r\n.el-upload__input {\r\n  display: none !important;\r\n}\r\n.avatar-uploader {\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader:hover {\r\n  border-color: #409eff;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 80px;\r\n  margin-top: 30px;\r\n  margin-bottom: 70px;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n  margin-left: 40px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}